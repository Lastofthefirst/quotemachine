{"ast":null,"code":"var _jsxFileName = \"/Users/idealmine/Desktop/quote/my-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Bahaquotes from './bahaQuotes.json';\nimport Abdulquotes from './abdulQuotes.json';\nimport Babquotes from './babQuotes.json';\nimport Gaurdianquotes from './gaurdianQuotes.json';\nimport UHJquotes from './uhjQuotes.json';\nlet fixed1 = Bahaquotes.map(el => {\n  return {\n    quote: el.quote,\n    source: el.author,\n    author: \"Baha'u'llah\"\n  };\n});\nlet fixed2 = Abdulquotes.map(el => {\n  return {\n    quote: el.quote,\n    source: el.author,\n    author: \"'Abdu'l-Baha'\"\n  };\n});\nlet fixed3 = Babquotes.map(el => {\n  return {\n    quote: el.quote,\n    source: el.author,\n    author: \"The Bab\"\n  };\n});\nlet fixed4 = Gaurdianquotes.map(el => {\n  return {\n    quote: el.quote,\n    source: el.author,\n    author: \"Shoghi Effendi\"\n  };\n});\nlet fixed5 = UHJquotes.map(el => {\n  return {\n    quote: el.quote,\n    source: el.author,\n    author: \"The Universal House of Justice\"\n  };\n});\nconst quotes = [...fixed1, ...fixed2, ...fixed3, ...fixed4, ...fixed5];\nconsole.log(quotes.length);\n\nfunction returnRandom(array) {\n  let random = Math.floor(Math.random() * Math.floor(array.length));\n  return array[random];\n}\n\nlet displayQuote = returnRandom(quotes);\n\nfunction updateUsn() {\n  let username = document.getElementById('inputuser').nodeValue;\n}\n\nfunction quoteBox(props) {\n  return React.createElement(\"div\", {\n    id: \"quote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(Quote, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(NewQuote, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Welcome, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    id: \"inputuser\",\n    onKeyUp: \"updateUsn()\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n}\n\nconst Welcome = props => React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, \"Hello, \", props.user, \"!\");\n\nWelcome.defaultProps = {\n  user: \"Quddus\"\n};\n\nfunction getNewQuote() {\n  displayQuote = returnRandom(quotes);\n  console.log('hello');\n}\n\nfunction quoteText() {\n  return React.createElement(\"div\", {\n    id: \"text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"\\\"\", displayQuote.quote, \"\\\"\");\n}\n\nfunction authorName() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"-\", displayQuote.author, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), displayQuote.source);\n}\n\nclass NewQuote extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"button\", {\n      id: \"new-quote\",\n      onClick: getNewQuote(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, \"This button gives a new quote\");\n  }\n\n}\n\nclass Quote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quote: displayQuote\n    };\n  }\n\n  render() {\n    const auth = this.state.quote.author;\n    const qtext = this.state.quote.quote;\n    const qsource = this.state.quote.source;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, qtext), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, auth), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, qsource));\n  }\n\n}\n\nfunction App() {\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, quoteBox()));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/idealmine/Desktop/quote/my-app/src/App.js"],"names":["React","Bahaquotes","Abdulquotes","Babquotes","Gaurdianquotes","UHJquotes","fixed1","map","el","quote","source","author","fixed2","fixed3","fixed4","fixed5","quotes","console","log","length","returnRandom","array","random","Math","floor","displayQuote","updateUsn","username","document","getElementById","nodeValue","quoteBox","props","Welcome","user","defaultProps","getNewQuote","quoteText","authorName","NewQuote","Component","constructor","render","Quote","state","auth","qtext","qsource","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Bahaquotes from './bahaQuotes.json';\nimport Abdulquotes from './abdulQuotes.json';\nimport Babquotes from './babQuotes.json';\nimport Gaurdianquotes from './gaurdianQuotes.json';\nimport UHJquotes from './uhjQuotes.json';\n\n\nlet fixed1 = Bahaquotes.map((el) => {return {quote: el.quote, source:el.author, author:\"Baha'u'llah\" }})\nlet fixed2 = Abdulquotes.map((el) => {return {quote: el.quote, source:el.author, author:\"'Abdu'l-Baha'\" }})\nlet fixed3 = Babquotes.map((el) => {return {quote: el.quote, source:el.author, author:\"The Bab\" }})\nlet fixed4 = Gaurdianquotes.map((el) => {return {quote: el.quote, source:el.author, author:\"Shoghi Effendi\" }})\nlet fixed5 = UHJquotes.map((el) => {return {quote: el.quote, source:el.author, author:\"The Universal House of Justice\" }})\n\n\nconst quotes = [...fixed1, ...fixed2, ...fixed3, ...fixed4, ...fixed5];\n\nconsole.log(quotes.length);\n\nfunction returnRandom(array){\n  let random = Math.floor(Math.random() * Math.floor(array.length));\n  return array[random];\n}\n\nlet displayQuote = returnRandom(quotes);\n\n\n\n\nfunction updateUsn(){\n  let username = document.getElementById('inputuser').nodeValue;\n}\n\n\n\nfunction quoteBox(props){\n  return (\n    <div id=\"quote-box\">\n      <Quote />\n      <NewQuote />\n      <Welcome  />\n      <input id=\"inputuser\" onKeyUp='updateUsn()'></input>\n    </div>\n  )\n}\n\n\n\nconst Welcome = (props) => <h1>Hello, {props.user}!</h1>\n\nWelcome.defaultProps = { user: \"Quddus\" }\n\nfunction getNewQuote(){\n  displayQuote = returnRandom(quotes);\n  console.log('hello')\n}\n\nfunction quoteText(){\n  return (\n    <div id='text' >\"{displayQuote.quote}\"</div>\n  )\n}\n\nfunction authorName(){\n  return (\n    <div >-{displayQuote.author}<br />{displayQuote.source}</div>\n  )\n}\nclass NewQuote extends React.Component {\n  constructor(props){\n    super(props);\n  }\n  render() {\n    return (\n\n      <button id=\"new-quote\" onClick={getNewQuote()}>This button gives a new quote</button>\n    );\n  }\n}\n\nclass Quote extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quote: displayQuote\n    }\n  }\n  render(){ \n    const auth = this.state.quote.author;\n    const qtext = this.state.quote.quote;\n    const qsource = this.state.quote.source;\n    return (<div>\n      <p>{qtext}</p>\n      <p>{auth}</p>\n      <p>{qsource}</p>\n    </div>)\n  }\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        {quoteBox()}\n      </header>\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}